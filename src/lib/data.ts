import { Template, Document } from "@/types";

export const TEMPLATES: Template[] = [
  {
    id: "freelance-agreement",
    name: "Freelance Agreement",
    description: "Professional contract for freelance services with comprehensive terms",
    imageUrl: "/placeholder.svg",
    fields: [
      "freelancerName",
      "freelancerAddress",
      "freelancerBusinessNumber",
      "clientName",
      "clientAddress",
      "clientBusinessNumber",
      "effectiveDate",
      
      "projectTitle",
      "projectScope",
      "projectTimeline",
      "specificDeliverables",
      "milestones",
      "acceptanceCriteria",
      
      "rateType",
      "rateAmount",
      "currency",
      "paymentSchedule",
      "lateFees",
      "expensePolicy",
      "invoicingInstructions",
      
      "estimatedHours",
      "minimumHours",
      "maximumHours",
      "workSchedule",
      "timeReportingRequirements",
      "overtimePolicy",
      
      "ipOwnership",
      "preexistingIp",
      "licenseGrants",
      "portfolioUseRights",
      
      "warrantyTerms",
      "limitationOfLiability",
      "indemnificationTerms",
      "insuranceRequirements",
      "confidentialityObligations",
      "nonCompeteTerms",
      "nonSolicitationTerms",
      
      "changeRequestProcess",
      "revisionPolicy",
      "cancellationTerms",
      "terminationNotice",
      "earlyTerminationFees",
      "disputeResolutionProcess",
      "governingLaw",
      "jurisdiction"
    ],
  },
  {
    id: "recruitment-contract",
    name: "Employment Contract",
    description: "Comprehensive employment agreement with detailed terms and conditions",
    imageUrl: "/placeholder.svg",
    fields: [
      "employeeName",
      "employeeAddress",
      "employeeId",
      "employerName",
      "employerAddress",
      "startDate",
      "probationPeriod",
      
      "jobTitle",
      "department",
      "reportingManager",
      "workLocation",
      "employmentType",
      "dutiesDescription",
      "performanceExpectations",
      
      "baseSalary",
      "currency",
      "paymentFrequency",
      "overtimeRate",
      "bonusStructure",
      "commissionStructure",
      "salaryReviewPolicy",
      
      "standardHours",
      "daysPerWeek",
      "flexTimePolicy",
      "breaksPolicy",
      "overtimePolicy",
      
      "healthInsurance",
      "dentalInsurance",
      "visionInsurance",
      "retirementPlan",
      "stockOptions",
      "profitSharing",
      
      "annualLeave",
      "sickLeave",
      "parentalLeave",
      "compassionateLeave",
      "unpaidLeavePolicy",
      
      "trainingEntitlements",
      "educationAssistance",
      "certificationSupport",
      "careerDevelopmentPlan",
      
      "codeOfConduct",
      "dressCode",
      "internetUsagePolicy",
      "confidentialityTerms",
      "intellectualPropertyRights",
      "dataProtectionPolicy",
      "socialMediaPolicy",
      
      "noticePeriod",
      "severanceTerms",
      "gardenLeave",
      "returnOfProperty",
      
      "nonCompeteDuration",
      "nonCompeteGeographic",
      "nonSolicitationTerms",
      "referencePolicy",
      
      "governingLaw",
      "disputeResolution",
      "severabilityClause",
      "amendmentProcess"
    ],
  },
  {
    id: "contractor-agreement",
    name: "Independent Contractor Agreement",
    description: "Detailed contract for independent contractors with comprehensive terms",
    imageUrl: "/placeholder.svg",
    fields: [
      "contractorName",
      "contractorAddress",
      "contractorTaxId",
      "companyName",
      "companyAddress",
      "companyRegistration",
      
      "serviceDescription",
      "projectScope",
      "deliverables",
      "qualityStandards",
      "performanceMetrics",
      "timelineDetails",
      "milestones",
      
      "rateDetails",
      "paymentSchedule",
      "invoicingRequirements",
      "taxResponsibilities",
      "expensePolicy",
      "latePaymentTerms",
      
      "equipmentProvided",
      "softwareLicenses",
      "resourceAccess",
      "workspaceArrangements",
      
      "independentStatus",
      "noEmployeeBenefits",
      "noAuthority",
      "subcontractingPolicy",
      "exclusivityTerms",
      
      "workProduct",
      "ipAssignment",
      "preexistingIp",
      "thirdPartyRights",
      
      "confidentialInformation",
      "dataProtection",
      "informationSecurity",
      "returnOfMaterials",
      
      "contractDuration",
      "renewalTerms",
      "terminationRights",
      "terminationNotice",
      "transitionRequirements",
      
      "applicableLaws",
      "industryRegulations",
      "insuranceRequirements",
      "taxCompliance",
      "workPermits",
      
      "indemnification",
      "limitationOfLiability",
      "warranties",
      "representations",
      "governingLaw",
      "venueForDisputes",
      "forceMajeure"
    ],
  },
  {
    id: "consulting-agreement",
    name: "Consulting Agreement",
    description: "Professional consulting services contract with detailed terms",
    imageUrl: "/placeholder.svg",
    fields: [
      "consultantName",
      "consultantQualifications",
      "consultantAddress",
      "clientName",
      "clientAddress",
      "effectiveDate",
      
      "consultingScope",
      "specificServices",
      "deliverables",
      "methodology",
      "serviceStandards",
      "reportingRequirements",
      
      "engagementTerm",
      "renewalOptions",
      "minimumCommitment",
      "exclusivityTerms",
      
      "consultingFees",
      "paymentSchedule",
      "expensePolicy",
      "travelCompensation",
      "cancelationFees",
      "latePaymentPenalties",
      
      "projectTimeline",
      "milestoneDates",
      "changeManagement",
      "clientResponsibilities",
      "resourceAllocation",
      "communicationPlan",
      
      "performanceMetrics",
      "qualityStandards",
      "acceptanceCriteria",
      "remedyProcess",
      "clientFeedback",
      
      "ipOwnership",
      "useRights",
      "preexistingIp",
      "developedMaterials",
      
      "confidentialityScope",
      "dataProtection",
      "informationSecurity",
      "survivalTerms",
      
      "indemnification",
      "insuranceCoverage",
      "limitationOfLiability",
      "warranties",
      "disclaimers",
      
      "terminationRights",
      "noticeRequirements",
      "terminationFees",
      "transitionServices",
      
      "governingLaw",
      "disputeResolution",
      "forceMajeure",
      "entireAgreement",
      "amendments",
      "notices"
    ],
  }
];

// Mock user documents
export const MOCK_DOCUMENTS: Document[] = [
  {
    id: "doc-1",
    userId: "user-1",
    templateId: "service-agreement",
    name: "Website Development Agreement",
    createdAt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),
    data: {
      templateId: "service-agreement",
      name: "Website Development Agreement",
      date: "2023-04-15",
      value: "$5,000",
      service: "Website Development",
      clientName: "Acme Corp",
      providerName: "Web Wizards LLC",
      duration: "45 days",
    },
    signed: true,
  },
  {
    id: "doc-2",
    userId: "user-1",
    templateId: "nda",
    name: "Project X Non-Disclosure",
    createdAt: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000).toISOString(),
    data: {
      templateId: "nda",
      name: "Project X Non-Disclosure",
      date: "2023-03-20",
      value: "",
      service: "",
      partyName: "John Smith",
      companyName: "Acme Corp",
      purpose: "Software Development Collaboration",
      duration: "2 years",
    },
    signed: false,
  },
];

// Helper function to generate document ID
export function generateId(prefix: string = "doc"): string {
  return `${prefix}-${Math.random().toString(36).substring(2, 9)}`;
}
